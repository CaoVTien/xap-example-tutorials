<?xml version="1.0"?>

<project name="openspaces-examples-data" default="usage" basedir=".">

	<!-- Two options to have custom build properties file (for example, to set the gshome.dir) -->
    <property file="../../../build.properties"/>
	<property file="${basedir}/build.properties" />

    <condition property="gshome.dir" value="../../">
        <not>
            <isset property="gshome.dir"/>
        </not>
    </condition>

    <property name="common.dir" location="${basedir}/common"/>
    <property name="feeder.dir" location="${basedir}/feeder"/>
    <property name="processor.dir" location="${basedir}/processor"/>
    <property name="deploy.dir" location="${basedir}/deploy"/>

    <property name="common-src" value="${common.dir}/src"/>
    <property name="common-classes" value="${common.dir}/classes"/>
    <property name="common-dist" value="${common.dir}/dist"/>
    <property name="common-jar" value="${common-dist}/data-common.jar"/>
    
	<property name="feeder-name" value = "feeder" />
    <property name="feeder-src" value="${feeder.dir}/src"/>
    <property name="feeder-pu" value="${feeder.dir}/pu/data-feeder"/>
    <property name="feeder-lib" value="${feeder-pu}/lib"/>
	<property name="feeder-dist" value="${feeder.dir}/dist"/>
	<property name="feeder-jar" value="${feeder-dist}/feeder.jar"/>

	<property name="processor-name" value="processor" />
    <property name="processor-src" value="${processor.dir}/src"/>
    <property name="processor-pu" value="${processor.dir}/pu/data-processor"/>
    <property name="processor-lib" value="${processor-pu}/lib"/>
	<property name="processor-dist" value="${processor.dir}/dist"/>
	<property name="processor-jar" value="${processor-dist}/processor.jar"/>
  
  <property name="dist.dir" value="${basedir}/dist"/>
  <property name="dist.zip" value="${basedir}/dist.zip"/>
  <property name="app-name" value="data-app"/>
  
    <path id="all-libs">
    	<fileset dir="${gshome.dir}/lib">
            <include name="**/*.jar"/>
            <exclude name="**/mule-os.jar" />
        </fileset>
    </path>

    <target name="usage">
        <echo message=""/>
        <echo message="OpenSpaces build script"/>
        <echo message="-----------------------------------------"/>
        <echo message=""/>
        <echo message="Among the available targets are:"/>
        <echo message=""/>
        <echo message="clean                    --> Cleans all output dirs"/>
        <echo message="build                    --> Build all; don't create JARs"/>
        <echo message="dist                     --> Build the distribution jar files"/>
    	<echo message="deploy                   --> Build, package and deploy the application" />
    	<echo message="undeploy                 --> Undeploys running processing units" />
        <echo message=""/>
    </target>

	<target name="clean">
	        <delete dir="${common-classes}"/>
	        <delete dir="${common-dist}"/>
	        <delete dir="${feeder-pu}/org"/>
	    	<delete dir="${feeder-dist}"/>
	        <delete dir="${processor-pu}/org"/>
	    	<delete dir="${processor-dist}"/>
			<delete dir="${dist.dir}"/>
			<delete file="${dist.zip}"/>
	    </target>

    <target name="build">
        <build src="${common-src}" classes="${common-classes}" additional-classpath=""/>
        <build src="${feeder-src}" classes="${feeder-pu}" additional-classpath="${common-classes}"/>
        <build src="${processor-src}" classes="${processor-pu}" additional-classpath="${common-classes}"/>
    </target>

    <target name="dist" depends="build">
        <!-- Build the common jar file -->
        <mkdir dir="${common-dist}"/>
        <jar basedir="${common-classes}" jarfile="${common-jar}"/>
        <!-- Copy over the common jar file to the processor and feeder libs -->
        <mkdir dir="${processor-lib}"/>
    	<mkdir dir="${processor-dist}"/>
        <copy todir="${processor-lib}" file="${common-jar}" verbose="true"/>
    	<jar basedir="${processor-pu}" jarfile="${processor-jar}"/>
        <mkdir dir="${feeder-lib}"/>
    	<mkdir dir="${feeder-dist}"/>
        <copy todir="${feeder-lib}" file="${common-jar}" verbose="true"/>
    	<jar basedir="${feeder-pu}" jarfile="${feeder-jar}" />
    	<copy file="${processor-jar}" todir="${dist.dir}" verbose="true"/>
    	<copy file="${feeder-jar}" todir="${dist.dir}" verbose="true"/>
    	<copy file="${basedir}/application.xml" todir="${dist.dir}" verbose="true"/>
    	<zip destfile="${dist.zip}" basedir="${dist.dir}"/>
    </target>
	
	<target name="deploy" depends="dist">
      
      <java classname="org.openspaces.admin.application.deploy.ApplicationDeployCommand" fork="false">
          <arg value="--timeout"/>
          <arg value="30000"/>
          <arg value="--deploy-timeout"/>
          <arg value="60000"/>
          <arg value="${dist.zip}"/>
          <classpath>
           <path refid="all-libs"/>
         </classpath>
      </java>
	</target>
	
	<target name="deploy-dir" depends="dist">
      
      <java classname="org.openspaces.admin.application.deploy.ApplicationDeployCommand" fork="false">
          <arg value="--timeout"/>
          <arg value="30000"/>
          <arg value="--deploy-timeout"/>
          <arg value="60000"/>
          <arg value="${dist.dir}"/>
          <classpath>
           <path refid="all-libs"/>
         </classpath>
      </java>
	</target>
	
	<target name="undeploy" >
      <java classname="org.openspaces.admin.application.deploy.ApplicationUndeployCommand" fork="false">
          <arg value="--timeout"/>
          <arg value="30000"/>
          <arg value="--undeploy-timeout"/>
          <arg value="60000"/>
          <arg value="${app-name}"/>
          <classpath>
           <path refid="all-libs"/>
         </classpath>
      </java>
	</target>

    <macrodef name="build">
        <attribute name="src"/>
        <attribute name="classes"/>
        <attribute name="additional-classpath"/>
        <sequential>
            <mkdir dir="@{classes}"/>

            <javac destdir="@{classes}" source="1.6" target="1.6" debug="on"
                   deprecation="false" optimize="false" failonerror="true">
                <src path="@{src}"/>
                <classpath refid="all-libs"/>
                <classpath location="@{additional-classpath}"/>
            </javac>

            <copy todir="@{classes}" preservelastmodified="true" verbose="true">
                <fileset dir="@{src}">
                    <include name="**/*.properties"/>
                    <include name="**/*.handlers"/>
                    <include name="**/*.schemas"/>
                    <include name="**/*.xml"/>
                    <include name="**/*.dtd"/>
                    <include name="**/*.xsd"/>
                </fileset>
            </copy>
        </sequential>
    </macrodef>

</project>