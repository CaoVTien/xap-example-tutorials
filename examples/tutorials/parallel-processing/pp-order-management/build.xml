<?xml version="1.0"?>

<project name="parallel-processing-oms" default="compile" basedir=".">

    <property file="../../../../build.properties"/>

    <property name="common-src" value="${basedir}/common/src"/>
    <property name="common-classes" value="${basedir}/common/classes"/>
    <property name="common-dist" value="${basedir}/common/dist"/>
    <property name="common-jar" value="${common-dist}/pp-oms-common.jar"/>

    <property name="validator-src" value="${basedir}/validator/src"/>
    <property name="validator-pu" value="${basedir}/validator/pu/pp-oms-validator"/>
    <property name="validator-pujar" value="${basedir}/validator/pu/pp-oms-validator.jar"/>
    <property name="validator-lib" value="${validator-pu}/lib"/>

    <property name="client-src" value="${basedir}/client/src"/>
    <property name="client-pu" value="${basedir}/client/pu/pp-oms-client"/>
    <property name="client-pujar" value="${basedir}/client/pu/pp-oms-client.jar"/>
    <property name="client-lib" value="${client-pu}/lib"/>
	
	<property name="processor-src" value="${basedir}/processor/src"/>
	<property name="processor-pu" value="${basedir}/processor/pu/pp-oms-processor"/>
	<property name="processor-pujar" value="${basedir}/processor/pu/pp-oms-processor.jar"/>
	<property name="processor-lib" value="${processor-pu}/lib"/>
	
    <condition property="gshome.dir" value="../../../../">
        <not>
            <isset property="gshome.dir"/>
        </not>
    </condition>

    <path id="all-libs">
        <fileset dir="${gshome.dir}/lib">
            <include name="**/*.jar"/>
        </fileset>
    </path>

    <target name="usage">
        <echo message=""/>
        <echo message="Parallel Processing - Order Management - build script"/>
        <echo message="-----------------------------------------------------"/>
        <echo message=""/>
        <echo message="Among the available targets are:"/>
        <echo message=""/>
        <echo message="clean                 --> Cleans all output dirs"/>
        <echo message="build                 --> build all; don't create JARs"/>
        <echo message="dist                  --> build the distribution"/>
    	<echo message="copy-local-client	 --> Copy the client pu to the deployment folder"/>
    	<echo message="copy-local-validator	 --> Copy the validator pu to the deployment folder"/>
    	<echo message="copy-local-processor  --> Copy the processor pu to the deployment folder"/>
        <echo message=""/>
    </target>

    <target name="clean">
        <delete dir="${common-classes}"/>
        <delete dir="${common-dist}"/>
        <delete dir="${validator-pu}/com"/>
        <delete dir="${client-pu}/com"/>
        <delete dir="${processor-pu}/com"/>
    </target>

    <target name="build">
        <build src="${common-src}" classes="${common-classes}" additional-classpath=""/>
        <build src="${validator-src}" classes="${validator-pu}" additional-classpath="${common-classes}"/>
        <build src="${client-src}" classes="${client-pu}" additional-classpath="${common-classes}"/>
    	<build src="${processor-src}" classes="${processor-pu}" additional-classpath="${common-classes}"/>
    </target>

    <target name="dist" depends="build">
        <!-- Build the common jar file -->
        <mkdir dir="${common-dist}"/>
        <jar basedir="${common-classes}" jarfile="${common-jar}"/>
        <!-- Copy the common jar file to the client, validator and processor libs -->
        <mkdir dir="${client-lib}"/>
        <copy todir="${client-lib}" file="${common-jar}"/>
        <mkdir dir="${validator-lib}"/>
        <copy todir="${validator-lib}" file="${common-jar}"/>
    	<mkdir dir="${processor-lib}"/>
    	<copy todir="${processor-lib}" file="${common-jar}"/>
        <!-- Build the pu jar files -->
        <jar basedir="${client-pu}" jarfile="${client-pujar}"/>
        <jar basedir="${validator-pu}" jarfile="${validator-pujar}"/>
    	<jar basedir="${processor-pu}" jarfile="${processor-pujar}"/>
    </target>
	
    <target name="copy-local-client" depends="dist">
        <delete dir="${gshome.dir}/deploy/pp-oms-client"/>
        <mkdir dir="${gshome.dir}/deploy/pp-oms-client"/>
        <copy todir="${gshome.dir}/deploy/pp-oms-client">
            <fileset dir="${client-pu}"/>
        </copy>
    </target>

    <target name="copy-local-validator" depends="dist">
        <delete dir="${gshome.dir}/deploy/pp-oms-validator"/>
        <mkdir dir="${gshome.dir}/deploy/pp-oms-validator"/>
        <copy todir="${gshome.dir}/deploy/pp-oms-validator">
            <fileset dir="${validator-pu}"/>
        </copy>
    </target>

	<target name="copy-local-processor" depends="dist">
	     <delete dir="${gshome.dir}/deploy/pp-oms-processor"/>
	     <mkdir dir="${gshome.dir}/deploy/pp-oms-processor"/>
	     <copy todir="${gshome.dir}/deploy/pp-oms-processor">
	         <fileset dir="${processor-pu}"/>
	     </copy>
	</target>
	
    <macrodef name="build">
        <attribute name="src"/>
        <attribute name="classes"/>
        <attribute name="additional-classpath"/>
        <sequential>
            <mkdir dir="@{classes}"/>

            <javac destdir="@{classes}" source="1.6" target="1.6" debug="on"
                   deprecation="false" optimize="false" failonerror="true">
                <src path="@{src}"/>
                <classpath refid="all-libs"/>
                <classpath location="@{additional-classpath}"/>
            </javac>

            <copy todir="@{classes}" preservelastmodified="true">
                <fileset dir="@{src}">
                    <include name="**/*.properties"/>
                    <include name="**/*.handlers"/>
                    <include name="**/*.schemas"/>
                    <include name="**/*.xml"/>
                    <include name="**/*.dtd"/>
                    <include name="**/*.xsd"/>
                </fileset>
            </copy>
        </sequential>
    </macrodef>

	<target name="compile" depends="build, dist" />
	 
</project>